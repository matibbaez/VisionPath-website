---
import Container from "../shared/Container.astro";
import Paragraph from "../shared/Paragraph.astro";
import Title from "../shared/Title.astro";
import { faqs } from "../../utils/data.ts";
import GradiantText from "../shared/GradiantText.astro";

type FAQProps = {
  question: string;
  answer: string;
};

export interface Props {
  className?: string;
}

const { className } = Astro.props;
---

<style>
  details {
    transition: max-height 0.4s ease-in-out, opacity 0.3s ease-in-out;
    max-height: 50px; /* Altura cerrada */
    overflow: hidden;
    opacity: 0.8;
  }

  details[open] {
    max-height: 300px; /* Ajusta según contenido */
    opacity: 1;
    animation: fadeIn 0.3s ease-in-out;
  }

  /* Animación de apertura */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-5px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Animación de cierre */
  @keyframes fadeOut {
    from {
      opacity: 1;
      transform: translateY(0);
    }
    to {
      opacity: 0;
      transform: translateY(-5px);
    }
  }
</style>

<section id="faq" class=${className}>
  <Container>
    <div class="text-center max-w-3xl mx-auto">
      <Title>Frequently Asked <GradiantText>Questions</GradiantText></Title>
    </div>

    <div
      class="grid border rounded-3xl border-box-border bg-box-bg shadow-lg divide-y divide-slate-200 dark:divide-slate-800 max-w-3xl mx-auto mt-8 overflow-hidden"
    >
      {
        faqs.map((faq: FAQProps, index) => {
          return (
            <div class="py-5 px-5 hover:bg-slate-200 dark:hover:bg-slate-800">
              <details id={`faq-${index}`} class="faq-item">
                <summary class="flex justify-between items-center font-medium cursor-pointer list-none text-heading-1">
                  <span>{faq.question}</span>
                  <span class="transition group-open:rotate-180 ">
                    <svg
                      fill="none"
                      height="24"
                      shape-rendering="geometricPrecision"
                      stroke="currentColor"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="1.5"
                      viewBox="0 0 24 24"
                      width="24"
                    >
                      <path d="M6 9l6 6 6-6" />
                    </svg>
                  </span>
                </summary>
                <Paragraph className="mt-3">{faq.answer}</Paragraph>
              </details>
            </div>
          );
        })
      }
    </div>
  </Container>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const faqs = document.querySelectorAll(".faq-item");

    faqs.forEach((faq) => {
      faq.addEventListener("toggle", (event) => {
        // Asegúrate de que "faq" es un HTMLDetailsElement
        const faqElement = faq as HTMLDetailsElement;

        if (faqElement.open) {
          // Cerrar los demás antes de abrir el actual
          faqs.forEach((otherFaq) => {
            const otherFaqElement = otherFaq as HTMLDetailsElement;
            if (otherFaqElement !== faqElement && otherFaqElement.open) {
              otherFaqElement.style.animation = "fadeOut 0.3s ease-in-out";
              setTimeout(() => {
                otherFaqElement.removeAttribute("open");
                otherFaqElement.style.animation = "";
              }, 300);
            }
          });
        }
      });
    });
  });
</script>

